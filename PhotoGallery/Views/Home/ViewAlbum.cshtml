@{
    ViewBag.Title = "View album";
}

<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/lightbox.css")" media="screen" />
<script src="@Url.Content("~/Scripts/lightbox_r.js")" type="text/javascript"></script>
    
<script type="text/javascript">
    var photos;
    var photoElements = [];
    var maxHeight = 200;
    var needRealign = true;
    var setupQueue = [];
    var loadingQueue = [];
    var partSize = 20;
    var firstPartSize = 100;
    var loadingCursor = 0;

    $(window).resize( function () {
        console.log('resize');
        loadThumbsForVisible();
        realign(true);
    });

    $(window).scroll(function() {  // OR  $(window).scroll(function() {
            loadThumbsForVisible();
        });

    $(window).scroll(function() {
        if($(window).scrollTop() + $(window).height() > $(document).height() - 100) {
            console.log("near bottom!");
            loadNextPart();
        }
    });

    $(document).ready(init);

    function init()
    {
        $.getJSON('@Url.Action("GetPhotos", new {album = ViewBag.Album})', function (data) {
            var items = [];

            photos = data;

            //$.each(photos, function (key, val) {
            for (var id = 0; id < Math.min(firstPartSize, photos.length); ++id)
            {
                ++loadingCursor;


                var photo = photos[id];

                setupPhotoElement(photo, id);
            }

            loadThumbsForVisible();
        });
    }

    function setupPhotoElement(photo, id)
    {
        var photoElement = $('<li />', { 'class': 'photo' });

        photoElement.attr('id', id);
        photoElements.push(photoElement);

        photo.id = id;
        photo.isLoaded = false;
        photo.isLoading = false;

        photoElement.append(
            $('<a />', { href: photo.OriginalUri, 'rel': "lightbox[album]", title: photo.FileName }).append(
                $('<img />', {'class': 'thumb', src: "@Url.Content("~/Content/blank.gif")", alt: photo.FileName}))//))
        );

        $('#photos-list').append(photoElement);
    }

    function loadNextPart()
    {
        console.log('loading next part');

        var end = Math.min(loadingCursor + partSize, photos.length);

        for (var i = loadingCursor; i < end; i++)
        {
            ++loadingCursor;

            setupPhotoElement(photos[i], i);
        }
    }

    function loadThumbsForVisible()
    {
        console.log('loadThumbsForVisible');

        var photoElements = $('.photo');

        for (var i = 0; i < photoElements.length; i++) {
            var photoElement = photoElements[i];

            if (elementInViewport2(photoElement))
            {
                var id = $(photoElement).attr('id');
                var photo = photos[id];

                if (!photo.isLoaded && !photo.isLoading)
                {
                    console.log('loading photo thumb with id: ' + id);
                    photo.isLoading = true;

                    //$(photoElement).find('img')[0].src = "@Url.Content("~/Resources/ajax-loader.gif")";

                    if (photo.ThumbUri == null)
                    {
                        // make thumb creaion request
                        loadingQueue.push(photo);
                    } else
                    {
                        // just set thumb image

                        setupThumb(photo, photoElement);

                        //$(photoElement).find('img')[0].src = photo.ThumbUri;
                        //$($(photoElement).find('img')[0]).load( realign );
//                        $($(photoElement).find('img')[0]).load( function ()
//                            {
//                                console.log(this);
//                                //this.attr('source-width' =
//                            } );
                    }
                }
            }
        }

        if (loadingQueue.length > 0)
        {
            loadNextTumb();
        }
    }

    function setupThumb(photo, photoElement)
    {
        setupQueue.push(photo);

        var pic = new Image();
        pic.src = photo.ThumbUri;
        pic.photo = photo;
        pic.photoElement = photoElement;
        pic.onload = function() {
                //alert(this.width + 'x' + this.height);
                $(this.photoElement).find('img')[0].src = this.photo.ThumbUri
                $(this.photoElement).attr('source-width', this.width);
                $(this.photoElement).attr('source-height', this.height);

                photo.isLoading = false;
                photo.isLoaded = true;

                console.log("pic. onload");

                needRealign = true;

                setupQueue.splice($.inArray(photo, setupQueue), 1);

                if (setupQueue.length == 0)
                {
                    console.log('loading queue is empty now');
                    realign(true);
                }
            };
    }
    var maxLoadingConnections = 5;
    var curLoadingConnections = 0;
    function loadNextTumb()
    {
        if (loadingQueue.length == 0)
        {
            return;
        }

        if (curLoadingConnections < maxLoadingConnections)
        {
            curLoadingConnections += 1;
        } else
        {
            return;
        }

        var photo = loadingQueue[0];

        var link = '@Url.Action("GetThumbFor")';

        debugger;

        link += "?album="  + encodeURIComponent('@HttpUtility.JavaScriptStringEncode(ViewBag.Album)');
        link += "&photo=" + encodeURIComponent(photo.FileName);

        $.getJSON(link, function (data) {
            var id = photo.id;

            console.log('thumb created for ' + id);

            photos[id].ThumbUri = data.ThumbUri;

            var photoElement = $('#photos-list').find('.photo[id="' + id + '"]')[0];

            setupThumb(photos[id], photoElement);

            loadingQueue.splice(0, 1);

            curLoadingConnections -= 1;

            loadNextTumb();
        });
    }

    function elementInViewport(el)
    {
        var rect = el.getBoundingClientRect();

        return (
            rect.top >= 0 &&
            rect.left >= 0 &&
            rect.bottom <= window.innerHeight &&
            rect.right <= window.innerWidth
        );
    };

    function elementInViewport2(el)
    {
        var rect = el.getBoundingClientRect();

        var width = el.offsetWidth;
        var height = el.offsetHeight;

        return (
            height + rect.top >= 0 &&
            width + rect.left >= 0 &&
            rect.bottom - height <= window.innerHeight &&
            rect.right - width <= window.innerWidth
        );
    };

    function realign(forceRealign)
    {
        forceRealign = typeof forceRealign !== 'undefined' ? forceRealign : false;

        if (!forceRealign && !needRealign)
            return;
        else
            needRealign = false;

        console.log('realign!');

        var currentStart = 0;
        var currentEnd = 0;

        var targetRowWidth = $(window).width(); //- 20;

        while(currentStart < photos.length && photos[currentStart].isLoaded)
        {
            var currentHeight = calcHeight(currentStart, currentEnd, targetRowWidth);

            while (currentHeight > maxHeight && currentEnd < photos.length)
            {
                currentEnd += 1;
                currentHeight = calcHeight(currentStart, currentEnd, targetRowWidth);
            }

            for (var i = currentStart; i <= currentEnd; i++)
            {
                var photo = getPhoto(i);
                var newPhotoWidth = currentHeight * getPhotoWidth(photo) / getPhotoHeight(photo);

                photo.find("img").css('height', currentHeight);
                photo.find("img").css('width', newPhotoWidth);
            }

            currentStart = currentEnd + 1;
            currentEnd = currentStart;
        }

        console.log('realigned till ' + currentEnd);
    }

    function getPhoto(id)
    {
        //return $(".photo[id=" + id + "]");
        return $(photoElements[id]);
    }

    function getRow(start, end)
    {
        var row = [];
        var totalHeight

        for (var i = start; i <= end; i++)
        {
            row.push(getPhoto(i));
        }

        return row;
    }

    function getPhotoWidth(photo)
    {
        var sourceWidth = parseFloat(photo.attr('source-width'));
        var marginsWidth = parseFloat(photo.css('padding-left')) + parseFloat(photo.css('padding-right'));

        return sourceWidth + marginsWidth;
    }

    function getPhotoHeight(photo)
    {
        var sourceHeight = parseFloat(photo.attr('source-height'));
        var marginsHeight = parseFloat(photo.css('padding-top')) + parseFloat(photo.css('padding-bottom'));

        return sourceHeight + marginsHeight;
    }

    function calcHeight(start, end, rowWidth)
    {
        var row = getRow(start, end);
        var aspectSum = 0;

        for (var i = 0; i < row.length; i++)
        {
            aspectSum += getPhotoWidth(row[i]) / getPhotoHeight(row[i]);
        }

        return rowWidth / aspectSum;
    }
</script>

<h2 class="album-name">@ViewBag.AlbumName (@ViewBag.PhotosCount pcs.)</h2>

<ul id="photos-list">
</ul>
